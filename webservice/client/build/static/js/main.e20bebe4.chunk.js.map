{"version":3,"sources":["data/countries_data.js","components/globe.js","components/SideBar.js","components/ComboBox.js","components/LineGraph.js","components/Graph.js","components/ChatBotManual.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["COUNTRIES_DATA","country","latitude","longitude","name","CustomGlobe","props","labelsData","lat","lng","size","color","code","updateDate","date","ttb","eurTtb","tts","eurTts","cadTtb","cadTts","audTtb","audTts","krwTtb","krwTts","jpyTtb","jpyTts","cnyTtb","cnyTts","gbpTtb","gbpTts","hkdTtb","hkdTts","usdTtb","usdTts","aedTtb","aedTts","globeEl","useRef","useState","features","hex","setHex","useEffect","HEX_DATA","kr","MAP_CENTER","altitude","current","pointOfView","class","style","marginBottom","id","ref","backgroundColor","labelLat","d","labelLng","labelText","labelSize","labelLabel","labelColor","useCallback","onLabelClick","window","open","labelDotRadius","labelAltitude","hexPolygonsData","hexPolygonResolution","hexPolygonMargin","hexPolygonColor","StickySideBar","top","fontSize","position","zIndex","cursor","to","smooth","duration","ComboBox","choice","setChoice","options","value","label","className","find","op","defaultValue","onChange","openMenuOnClick","getTargetCountry","console","log","LineGraph","targetCountry","setTargetCountry","data","setData","axios","get","toLowerCase","then","res","temp","map","day","slice","display","justifyContent","tableLayout","LineChart","width","height","margin","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","padding","Tooltip","Legend","align","iconSize","Line","type","stroke","strokeWidth","Graph","paddingBottom","paddingTop","textAlign","images","url","ChatBotManual","objectFit","showBullets","showNavs","navSize","Home","setDate","setEurTtb","setEurTts","setCadTtb","setCadTts","setAudTtb","setAudTts","setKrwTtb","setKrwTts","setJpyTtb","setJpyTts","setCnyTtb","setCnyTts","setGbpTtb","setGbpTts","setUsdTtb","setUsdTts","setHkdTtb","setHkdTts","setAedTtb","setAedTts","SideBar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"805dAAaA,EAAiB,CAC1B,CACEC,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,wBAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,YAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,SACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,WACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,eAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,kBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,sBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,SACXC,WAAY,UACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,QACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,MACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,SACZC,KAAM,kBAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,SACZC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,QACXC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,QACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,UAAW,QACXC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,UACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,cAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,QACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,WACZC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,SACVC,WAAY,UACZC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,SACXC,WAAY,UACZC,KAAM,QAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,UACZC,KAAM,eAER,CACEH,QAAS,KACTC,SAAU,UACVC,WAAY,SACZC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,SAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,SACXC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,gBAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,aAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,YAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,UACXC,KAAM,UAER,CACEH,QAAS,KACTC,SAAU,SACVC,UAAW,WACXC,KAAM,UAER,CACEH,QAAS,KACTC,UAAW,SACXC,UAAW,UACXC,KAAM,YAER,CACEH,QAAS,KACTC,UAAW,UACXC,WAAY,UACZC,KAAM,WAER,CACEH,QAAS,KACTC,SAAU,UACVC,UAAW,WACXC,KAAM,WAER,CACEH,QAAS,KACTC,UAAW,UACXC,UAAW,UACXC,KAAM,iB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","file":"static/js/main.e20bebe4.chunk.js","sourcesContent":["export const COUNTRIES_DATA = [\r\n    {\r\n      country: \"AE\",\r\n      latitude: 23.424076,\r\n      longitude: 53.847818,\r\n      name: \"United Arab Emirates\"\r\n    },\r\n    {\r\n      country: \"AO\",\r\n      latitude: -11.202692,\r\n      longitude: 17.873887,\r\n      name: \"Angola\"\r\n    },\r\n    {\r\n      country: \"AR\",\r\n      latitude: -38.416097,\r\n      longitude: -63.616672,\r\n      name: \"Argentina\"\r\n    },\r\n    {\r\n      country: \"AT\",\r\n      latitude: 47.516231,\r\n      longitude: 14.550072,\r\n      name: \"Austria\"\r\n    },\r\n    {\r\n      country: \"AU\",\r\n      latitude: -25.274398,\r\n      longitude: 133.775136,\r\n      name: \"Australia\"\r\n    },\r\n    {\r\n      country: \"BD\",\r\n      latitude: 23.684994,\r\n      longitude: 90.356331,\r\n      name: \"Bangladesh\"\r\n    },\r\n    {\r\n      country: \"BE\",\r\n      latitude: 50.503887,\r\n      longitude: 4.469936,\r\n      name: \"Belgium\"\r\n    },\r\n    {\r\n      country: \"BG\",\r\n      latitude: 42.733883,\r\n      longitude: 25.48583,\r\n      name: \"Bulgaria\"\r\n    },\r\n    {\r\n      country: \"BR\",\r\n      latitude: -14.235004,\r\n      longitude: -51.92528,\r\n      name: \"Brazil\"\r\n    },\r\n    {\r\n      country: \"CA\",\r\n      latitude: 56.130366,\r\n      longitude: -106.346771,\r\n      name: \"Canada\"\r\n    },\r\n    {\r\n      country: \"CH\",\r\n      latitude: 46.818188,\r\n      longitude: 8.227512,\r\n      name: \"Switzerland\"\r\n    },\r\n    {\r\n      country: \"CL\",\r\n      latitude: -35.675147,\r\n      longitude: -71.542969,\r\n      name: \"Chile\"\r\n    },\r\n    {\r\n      country: \"CN\",\r\n      latitude: 35.86166,\r\n      longitude: 104.195397,\r\n      name: \"China\"\r\n    },\r\n    {\r\n      country: \"CO\",\r\n      latitude: 4.570868,\r\n      longitude: -74.297333,\r\n      name: \"Colombia\"\r\n    },\r\n    {\r\n      country: \"CR\",\r\n      latitude: 9.748917,\r\n      longitude: -83.753428,\r\n      name: \"Costa Rica\"\r\n    },\r\n    {\r\n      country: \"CZ\",\r\n      latitude: 49.817492,\r\n      longitude: 15.472962,\r\n      name: \"Czech Republic\"\r\n    },\r\n    {\r\n      country: \"DE\",\r\n      latitude: 51.165691,\r\n      longitude: 10.451526,\r\n      name: \"Germany\"\r\n    },\r\n    {\r\n      country: \"DK\",\r\n      latitude: 56.26392,\r\n      longitude: 9.501785,\r\n      name: \"Denmark\"\r\n    },\r\n    {\r\n      country: \"DO\",\r\n      latitude: 18.735693,\r\n      longitude: -70.162651,\r\n      name: \"Dominican Republic\"\r\n    },\r\n    {\r\n      country: \"DZ\",\r\n      latitude: 28.033886,\r\n      longitude: 1.659626,\r\n      name: \"Algeria\"\r\n    },\r\n    {\r\n      country: \"EC\",\r\n      latitude: -1.831239,\r\n      longitude: -78.183406,\r\n      name: \"Ecuador\"\r\n    },\r\n    {\r\n      country: \"EG\",\r\n      latitude: 26.820553,\r\n      longitude: 30.802498,\r\n      name: \"Egypt\"\r\n    },\r\n    {\r\n      country: \"ES\",\r\n      latitude: 40.463667,\r\n      longitude: -3.74922,\r\n      name: \"Spain\"\r\n    },\r\n    {\r\n      country: \"ET\",\r\n      latitude: 9.145,\r\n      longitude: 40.489673,\r\n      name: \"Ethiopia\"\r\n    },\r\n    {\r\n      country: \"FI\",\r\n      latitude: 61.92411,\r\n      longitude: 25.748151,\r\n      name: \"Finland\"\r\n    },\r\n    {\r\n      country: \"FR\",\r\n      latitude: 46.227638,\r\n      longitude: 2.213749,\r\n      name: \"France\"\r\n    },\r\n    {\r\n      country: \"GB\",\r\n      latitude: 55.378051,\r\n      longitude: -3.435973,\r\n      name: \"United Kingdom\"\r\n    },\r\n    {\r\n      country: \"GH\",\r\n      latitude: 7.946527,\r\n      longitude: -1.023194,\r\n      name: \"Ghana\"\r\n    },\r\n    {\r\n      country: \"GR\",\r\n      latitude: 39.074208,\r\n      longitude: 21.824312,\r\n      name: \"Greece\"\r\n    },\r\n    {\r\n      country: \"GT\",\r\n      latitude: 15.783471,\r\n      longitude: -90.230759,\r\n      name: \"Guatemala\"\r\n    },\r\n    {\r\n      country: \"HK\",\r\n      latitude: 22.396428,\r\n      longitude: 114.109497,\r\n      name: \"Hong Kong\"\r\n    },\r\n    {\r\n      country: \"HU\",\r\n      latitude: 47.162494,\r\n      longitude: 19.503304,\r\n      name: \"Hungary\"\r\n    },\r\n    {\r\n      country: \"ID\",\r\n      latitude: -0.789275,\r\n      longitude: 113.921327,\r\n      name: \"Indonesia\"\r\n    },\r\n    {\r\n      country: \"IE\",\r\n      latitude: 53.41291,\r\n      longitude: -8.24389,\r\n      name: \"Ireland\"\r\n    },\r\n    {\r\n      country: \"IL\",\r\n      latitude: 31.046051,\r\n      longitude: 34.851612,\r\n      name: \"Israel\"\r\n    },\r\n    {\r\n      country: \"IN\",\r\n      latitude: 20.593684,\r\n      longitude: 78.96288,\r\n      name: \"India\"\r\n    },\r\n    {\r\n      country: \"IT\",\r\n      latitude: 41.87194,\r\n      longitude: 12.56738,\r\n      name: \"Italy\"\r\n    },\r\n    {\r\n      country: \"JP\",\r\n      latitude: 36.204824,\r\n      longitude: 138.252924,\r\n      name: \"Japan\"\r\n    },\r\n    {\r\n      country: \"KE\",\r\n      latitude: -0.023559,\r\n      longitude: 37.906193,\r\n      name: \"Kenya\"\r\n    },\r\n    {\r\n      country: \"KR\",\r\n      latitude: 35.907757,\r\n      longitude: 127.766922,\r\n      name: \"South Korea\"\r\n    },\r\n    {\r\n      country: \"KW\",\r\n      latitude: 29.31166,\r\n      longitude: 47.481766,\r\n      name: \"Kuwait\"\r\n    },\r\n    {\r\n      country: \"LK\",\r\n      latitude: 7.873054,\r\n      longitude: 80.771797,\r\n      name: \"Sri Lanka\"\r\n    },\r\n    {\r\n      country: \"LT\",\r\n      latitude: 55.169438,\r\n      longitude: 23.881275,\r\n      name: \"Lithuania\"\r\n    },\r\n    {\r\n      country: \"LU\",\r\n      latitude: 49.815273,\r\n      longitude: 6.129583,\r\n      name: \"Luxembourg\"\r\n    },\r\n    {\r\n      country: \"MA\",\r\n      latitude: 31.791702,\r\n      longitude: -7.09262,\r\n      name: \"Morocco\"\r\n    },\r\n    {\r\n      country: \"MO\",\r\n      latitude: 22.198745,\r\n      longitude: 113.543873,\r\n      name: \"Macau\"\r\n    },\r\n    {\r\n      country: \"MX\",\r\n      latitude: 23.634501,\r\n      longitude: -102.552784,\r\n      name: \"Mexico\"\r\n    },\r\n    {\r\n      country: \"MY\",\r\n      latitude: 4.210484,\r\n      longitude: 101.975766,\r\n      name: \"Malaysia\"\r\n    },\r\n    {\r\n      country: \"NG\",\r\n      latitude: 9.081999,\r\n      longitude: 8.675277,\r\n      name: \"Nigeria\"\r\n    },\r\n    {\r\n      country: \"NL\",\r\n      latitude: 52.132633,\r\n      longitude: 5.291266,\r\n      name: \"Netherlands\"\r\n    },\r\n    {\r\n      country: \"NO\",\r\n      latitude: 60.472024,\r\n      longitude: 8.468946,\r\n      name: \"Norway\"\r\n    },\r\n    {\r\n      country: \"NZ\",\r\n      latitude: -40.900557,\r\n      longitude: 174.885971,\r\n      name: \"New Zealand\"\r\n    },\r\n    {\r\n      country: \"PA\",\r\n      latitude: 8.537981,\r\n      longitude: -80.782127,\r\n      name: \"Panama\"\r\n    },\r\n    {\r\n      country: \"PE\",\r\n      latitude: -9.189967,\r\n      longitude: -75.015152,\r\n      name: \"Peru\"\r\n    },\r\n    {\r\n      country: \"PH\",\r\n      latitude: 12.879721,\r\n      longitude: 121.774017,\r\n      name: \"Philippines\"\r\n    },\r\n    {\r\n      country: \"PL\",\r\n      latitude: 51.919438,\r\n      longitude: 19.145136,\r\n      name: \"Poland\"\r\n    },\r\n    {\r\n      country: \"PR\",\r\n      latitude: 18.220833,\r\n      longitude: -66.590149,\r\n      name: \"Puerto Rico\"\r\n    },\r\n    {\r\n      country: \"PT\",\r\n      latitude: 39.399872,\r\n      longitude: -8.224454,\r\n      name: \"Portugal\"\r\n    },\r\n    {\r\n      country: \"QA\",\r\n      latitude: 25.354826,\r\n      longitude: 51.183884,\r\n      name: \"Qatar\"\r\n    },\r\n    {\r\n      country: \"RO\",\r\n      latitude: 45.943161,\r\n      longitude: 24.96676,\r\n      name: \"Romania\"\r\n    },\r\n    {\r\n      country: \"RU\",\r\n      latitude: 61.52401,\r\n      longitude: 105.318756,\r\n      name: \"Russia\"\r\n    },\r\n    {\r\n      country: \"SA\",\r\n      latitude: 23.885942,\r\n      longitude: 45.079162,\r\n      name: \"Saudi Arabia\"\r\n    },\r\n    {\r\n      country: \"SE\",\r\n      latitude: 60.128161,\r\n      longitude: 18.643501,\r\n      name: \"Sweden\"\r\n    },\r\n    {\r\n      country: \"SG\",\r\n      latitude: 1.352083,\r\n      longitude: 103.819836,\r\n      name: \"Singapore\"\r\n    },\r\n    {\r\n      country: \"SI\",\r\n      latitude: 46.151241,\r\n      longitude: 14.995463,\r\n      name: \"Slovenia\"\r\n    },\r\n    {\r\n      country: \"SK\",\r\n      latitude: 48.669026,\r\n      longitude: 19.699024,\r\n      name: \"Slovakia\"\r\n    },\r\n    {\r\n      country: \"TH\",\r\n      latitude: 15.870032,\r\n      longitude: 100.992541,\r\n      name: \"Thailand\"\r\n    },\r\n    {\r\n      country: \"TR\",\r\n      latitude: 38.963745,\r\n      longitude: 35.243322,\r\n      name: \"Turkey\"\r\n    },\r\n    {\r\n      country: \"TW\",\r\n      latitude: 23.69781,\r\n      longitude: 120.960515,\r\n      name: \"Taiwan\"\r\n    },\r\n    {\r\n      country: \"TZ\",\r\n      latitude: -6.369028,\r\n      longitude: 34.888822,\r\n      name: \"Tanzania\"\r\n    },\r\n    {\r\n      country: \"UY\",\r\n      latitude: -32.522779,\r\n      longitude: -55.765835,\r\n      name: \"Uruguay\"\r\n    },\r\n    {\r\n      country: \"VN\",\r\n      latitude: 14.058324,\r\n      longitude: 108.277199,\r\n      name: \"Vietnam\"\r\n    },\r\n    {\r\n      country: \"ZA\",\r\n      latitude: -30.559482,\r\n      longitude: 22.937506,\r\n      name: \"South Africa\"\r\n    }\r\n  ];\r\n  ","import React from \"react\";\r\nimport { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { COUNTRIES_DATA } from \"../data/countries_data\";\r\nimport HEX_DATA from \"../data/countries_hex_data.json\";\r\nimport Globe from \"react-globe.gl\";\r\n\r\nexport default function CustomGlobe( props ) {\r\n\r\n\r\nconst labelsData = [\r\n\r\n  { name: \"EUROPE\",\r\n    lat: 46.227638,\r\n    lng: 2.213749, \r\n    size: 1, \r\n    color: \"yellow\",\r\n    code: \"EUR\",\r\n    updateDate : props.date,\r\n    ttb : props.eurTtb,\r\n    tts : props.eurTts,\r\n  },\r\n  {\r\n    name: \"Canada\",\r\n    lat: 56.130366,\r\n    lng: -106.34677099999999,\r\n    size: 1,\r\n    color: \"white\",\r\n    code: \"CAD\",\r\n    updateDate : props.date,\r\n    ttb : props.cadTtb,\r\n    tts : props.cadTts,\r\n\r\n  },\r\n  {\r\n      name: \"Australia\",\r\n      lat: -25.274398,\r\n      lng: 133.775136,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"AUD\",\r\n      updateDate : props.date,\r\n      ttb : props.audTtb,\r\n      tts : props.audTts,\r\n\r\n  },\r\n  {\r\n      name: \"South Korea\",\r\n      lat: 35.907757000000004,\r\n      lng: 127.766922,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"WON\",\r\n      updateDate : props.date,\r\n      ttb : props.krwTtb,\r\n      tts : props.krwTts,\r\n  },\r\n  {\r\n    name: \"Japan\",\r\n    lat: 36.204824,\r\n    lng: 138.252924,\r\n    size: 1,\r\n    color: \"white\",\r\n    code: \"JPY(100)\",\r\n    updateDate : props.date,\r\n    ttb : props.jpyTtb,\r\n    tts : props.jpyTts,\r\n },\r\n  {\r\n      name: \"China\",\r\n      lat: 35.86166,\r\n      lng: 104.195397,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"CNY\",\r\n      updateDate : props.date,\r\n      ttb : props.cnyTtb,\r\n      tts : props.cnyTts,\r\n\r\n  },\r\n  {\r\n      name: \"United Kingdom\",\r\n      lat: 55.378051,\r\n      lng: -3.435973,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"GBP\",\r\n      updateDate : props.date,\r\n      ttb : props.gbpTtb,\r\n      tts : props.gbpTts,\r\n\r\n  },\r\n  {\r\n      name: \"Hong Kong\",\r\n      lat: 22.396428,\r\n      lng: 114.109497,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"HKD\",\r\n      updateDate : props.date,\r\n      ttb : props.hkdTtb,\r\n      tts : props.hkdTts,\r\n\r\n  },\r\n  {\r\n      name: \"United States\",\r\n      lat: 42.813297,\r\n      lng: -106.34677099999999,\r\n      size: 1,\r\n      color: \"white\",\r\n      code: \"USD\",\r\n      updateDate : props.date,\r\n      ttb : props.usdTtb,\r\n      tts : props.usdTts,\r\n\r\n  },\r\n  {\r\n      name: \"United Arab Emirates\",\r\n      lat: 23.424076,\r\n      lng: 53.847818,\r\n      size : 1,\r\n      color: \"white\",\r\n      code: \"AED\",\r\n      updateDate : props.date,\r\n      ttb : props.aedTtb,\r\n      tts : props.aedTts,\r\n\r\n    },\r\n];\r\n\r\n\r\n  const globeEl = useRef();\r\n  //console.log(COUNTRIES_DATA.findIndex((e) => e.name === \"South Korea\" )) 39\r\n  const [hex, setHex] = useState({ features: [] });\r\n  useEffect(() => {\r\n    setHex(HEX_DATA);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // globeEl.current.controls().autoRotate = true;\r\n    // globeEl.current.controls().autoRotateSpeed = 0.2;\r\n    const kr = COUNTRIES_DATA[39];\r\n    const MAP_CENTER = { lat: kr.latitude, lng: kr.longitude, altitude: 1.5 };\r\n    globeEl.current.pointOfView(MAP_CENTER, 0);\r\n  }, [globeEl]);\r\n\r\n  return (\r\n    <div class = 'wrapper' style = {{marginBottom : '20%'}}>\r\n        <div id = 'globe' >\r\n            <Globe \r\n            ref={globeEl}\r\n            backgroundColor=\"#000\"\r\n            labelsData= {labelsData}\r\n            labelLat={(d) => d.lat}\r\n            labelLng={(d) => d.lng}\r\n            labelText={(d) => d.name}\r\n            labelSize={(d) => 0.5 + d.size}\r\n            labelLabel={(d) => `\r\n            <div>\r\n            <br></br>\r\n            <b>통화 코드 : ${d.code}</b></div>\r\n            <li><b>받으실 때 : ${d.ttb}</b></li>\r\n            <li><b>보내실 때 : ${d.tts}</b></li>\r\n            <li><b>업데이트 날짜 : ${d.updateDate}</b></li>\r\n            <i>자세한 정보를 보시려면 클릭하세요</i>\r\n            `}\r\n            \r\n            labelColor={useCallback(() => \"yellow\", [])}\r\n            onLabelClick={() => window.open('https://www.koreaexim.go.kr/site/program/financial/exchange?menuid=001001004002001')}\r\n            labelDotRadius={0.4}\r\n            labelAltitude={0.05}\r\n            hexPolygonsData={hex.features}\r\n            hexPolygonResolution={3} //values higher than 3 makes it buggy\r\n            hexPolygonMargin={0.62}\r\n            hexPolygonColor={useCallback(() => \"#1b66b1\", [])}\r\n            />\r\n        </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Link as Scroll } from 'react-scroll';\r\n\r\n\r\nfunction StickySideBar() {\r\n\r\n    const linkStyle ={\r\n        top:0,\r\n        fontSize: '1.3rem',\r\n        position: 'fixed',\r\n        zIndex: '1',\r\n        marginBottom : '0.3rem',\r\n        cursor : 'pointer',\r\n    }\r\n\r\n    return (\r\n\r\n        <div style={{...linkStyle, backgroundColor : '#000'}}>\r\n            <Scroll\r\n                to=\"globe\"\r\n                smooth={true}\r\n                duration={600}\r\n                style = {{color: 'yellow'}}\r\n            >\r\n                Globe\r\n            </Scroll>\r\n    \r\n            <p style = {{fontSize : '0.3rem'}}></p>\r\n    \r\n            <Scroll\r\n                to=\"graph\"\r\n                smooth={true}\r\n                duration={600}\r\n                style = {{color: 'yellow'}}\r\n            >\r\n                Chart\r\n            </Scroll>\r\n \r\n            <p style = {{fontSize : '0.3rem'}} ></p>\r\n\r\n            <Scroll\r\n                to=\"chatBotManual\"\r\n                smooth={true}\r\n                duration={600}\r\n                style = {{color: 'yellow'}}\r\n            >\r\n               Chat Bot\r\n            </Scroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StickySideBar\r\n\r\n\r\n","import {React, useState} from \"react\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nfunction ComboBox(props) {\r\n\r\n    const [choice, setChoice] = useState('');\r\n\r\n    const sendTargetCountry = () =>{\r\n      props.getTargetCountry(choice)\r\n      console.log(choice)\r\n      console.log('that was choice from combobox')\r\n  }\r\n\r\n    const onChange = (value) => {\r\n        setChoice(value)\r\n    }\r\n\r\n    const options = [\r\n        { value: 'AED', label: 'United Arab Emirates' },\r\n        { value: 'AUD', label: 'Australia' },\r\n        { value: 'CAD', label: 'Canada' },\r\n        { value: 'CNY', label: 'China' },\r\n        { value: 'EUR', label: 'Europe' },\r\n        { value: 'GBP', label: 'United Kingdom' },\r\n        { value: 'HKD', label: 'Hong Kong' },\r\n        { value: 'JPY_100', label: 'Japan' },\r\n        { value: 'KRW', label: 'Korea' },\r\n        { value: 'USD', label: 'United States' }\r\n    ];\r\n\r\n  return (\r\n    <div className=\"App\" style = {{fontSize : '1rem'}}>\r\n      <Select \r\n        options={options}\r\n        value = {options.find(op => {\r\n            return op.value === choice\r\n        })}\r\n        defaultValue={options[0]}\r\n        onChange={(value) => {\r\n            onChange(value.value)\r\n        }}\r\n        openMenuOnClick = {sendTargetCountry()}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComboBox;","import {React, useState, useEffect} from 'react';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport axios from 'axios';\r\nimport ComboBox from './ComboBox';\r\n\r\n\r\nfunction LineGraph() {\r\n\r\n    const [targetCountry, setTargetCountry] = useState('aed')\r\n    \r\n    const getTargetCountry = (country) => {\r\n        setTargetCountry(country);\r\n    }\r\n\r\n    console.log(targetCountry)\r\n    console.log('that was targetCountry')\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/alltime/'+targetCountry.toLowerCase())\r\n        .then(res => {\r\n            console.log(res.data)\r\n            const temp = res.data\r\n            temp.map((day) => {\r\n                return day.date = day.date.slice(0,10)\r\n            })\r\n            setData(temp)\r\n        })\r\n    },[targetCountry])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div style = {{display : 'flex',justifyContent : 'center',tableLayout : 'fixed'}}>\r\n        <ComboBox \r\n            getTargetCountry = {getTargetCountry}>\r\n        </ComboBox>\r\n\r\n        <LineChart\r\n            width={900}\r\n            height={550}\r\n            data={data}\r\n            margin={{\r\n            top: 5, right: 30, left: 20, bottom: 5,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis domain={['dataMin' , 'dataMax']} padding={{ top: 10, bottom : 10}} />\r\n            <Tooltip />\r\n            <Legend align = \"left\" iconSize = {28} height = {1}/>\r\n            <Line type=\"monotone\" dataKey=\"ttb\" stroke=\"#8884d8\" strokeWidth={3}/>\r\n            <Line type=\"monotone\" dataKey=\"tts\" stroke=\"#82ca9d\" strokeWidth={3}/>\r\n        </LineChart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","import {React} from 'react'\r\n\r\nimport LineGraph from './LineGraph'\r\n\r\n\r\nfunction Graph() \r\n{  \r\n\r\n    return (\r\n        <div id = 'graph' style = {{paddingBottom : '13%', paddingTop : '3%', textAlign : 'center'}}>\r\n            <h1 style = {{color : 'yellow'}}> Chart </h1>\r\n            <p style = {{color : 'yellow'}}>\r\n                차트를 확인하고 싶으신 국가를 선택해 주세요\r\n            </p>\r\n\r\n            <div style = {{display : 'flex',justifyContent : 'center'}}> \r\n\r\n            <LineGraph></LineGraph>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React from 'react';\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\n\r\nconst images = [\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_1.jpg?raw=true' },\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_2.jpg?raw=true' },\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_3.jpg?raw=true' },\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_4.jpg?raw=true' },\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_5.jpg?raw=true' },\r\n    { url: 'https://github.com/LEEDOWON96/goorm-proj/blob/main/client/src/data/images/pr_6.jpg?raw=true' },\r\n];\r\n\r\nfunction ChatBotManual() {\r\n\r\n    return (\r\n        <div id = 'wrapper' style = {{backgroundColor : '#000' , color : 'yellow', textAlign : 'center', paddingBottom : '15%'}}>\r\n\r\n            <h1 id = 'chatBotManual'>\r\n                Chat Bot 사용 설명서\r\n            </h1>\r\n            <p style = {{paddingBottom : '3%'}}> \r\n                저희는 텔레그램 챗봇 서비스 역시 제공하고 있습니다.<br></br>\r\n                주기적인 알림, 원터치 환율 알림 등 다양한 서비스를 사용해보세요!\r\n\r\n            </p>\r\n\r\n            <div style = {{display : 'flex',justifyContent : 'center',objectFit:'cover'}}>\r\n                <SimpleImageSlider\r\n                width={'590px'}\r\n                height={'450px'}\r\n                images={images}\r\n                showBullets={true}\r\n                showNavs={true}\r\n                navSize='50'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatBotManual\r\n","import {React, useState, useEffect} from 'react';\r\nimport CustomGlobe from '../components/globe';\r\nimport SideBar from '../components/SideBar';\r\nimport Graph from '../components/Graph'\r\nimport ChatBotManual from '../components/ChatBotManual';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n    const [date,setDate] = useState('');\r\n\r\n    const [eurTtb, setEurTtb] = useState('');\r\n    const [eurTts, setEurTts] = useState('');\r\n\r\n    const [cadTtb, setCadTtb] = useState('');\r\n    const [cadTts, setCadTts] = useState('');\r\n\r\n    const [audTtb, setAudTtb] = useState('');\r\n    const [audTts, setAudTts] = useState('');\r\n\r\n    const [krwTtb, setKrwTtb] = useState('');\r\n    const [krwTts, setKrwTts] = useState('');\r\n\r\n    const [jpyTtb, setJpyTtb] = useState('');\r\n    const [jpyTts, setJpyTts] = useState('');\r\n\r\n    const [cnyTtb, setCnyTtb] = useState('');\r\n    const [cnyTts, setCnyTts] = useState('');\r\n\r\n    const [gbpTtb, setGbpTtb] = useState('');\r\n    const [gbpTts, setGbpTts] = useState('');\r\n\r\n    const [usdTtb, setUsdTtb] = useState('');\r\n    const [usdTts, setUsdTts] = useState('');\r\n\r\n    const [hkdTtb, setHkdTtb] = useState('');\r\n    const [hkdTts, setHkdTts] = useState('');\r\n\r\n    const [aedTtb, setAedTtb] = useState('');\r\n    const [aedTts, setAedTts] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/eur')\r\n            .then(res => setDate(res.data[0].updateDate))\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/eur')\r\n            .then(res => {\r\n                setEurTtb(res.data[1].ttb)\r\n                setEurTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/cad')\r\n            .then(res => {\r\n                setCadTtb(res.data[1].ttb)\r\n                setCadTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/aud')\r\n            .then(res => {\r\n                setAudTtb(res.data[1].ttb)\r\n                setAudTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/cny')\r\n            .then(res => {\r\n                setCnyTtb(res.data[1].ttb)\r\n                setCnyTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/krw')\r\n            .then(res => {\r\n                setKrwTtb(res.data[1].ttb)\r\n                setKrwTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/jpy_100')\r\n            .then(res => {\r\n                setJpyTtb(res.data[1].ttb)\r\n                setJpyTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/usd')\r\n            .then(res => {\r\n                setUsdTtb(res.data[1].ttb)\r\n                setUsdTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/gbp')\r\n            .then(res => {\r\n                setGbpTtb(res.data[1].ttb)\r\n                setGbpTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/aed')\r\n            .then(res => {\r\n                setAedTtb(res.data[1].ttb)\r\n                setAedTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3100/api/today/hkd')\r\n            .then(res => {\r\n                setHkdTtb(res.data[1].ttb)\r\n                setHkdTts(res.data[1].tts)\r\n            })\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className = 'wrapper' style = {{backgroundColor : \"#000\"}}>\r\n            <CustomGlobe \r\n                date = {date} \r\n                eurTtb = {eurTtb}\r\n                eurTts = {eurTts}\r\n                gbpTtb = {gbpTtb}\r\n                gbpTts = {gbpTts}\r\n                aedTts = {aedTts} \r\n                aedTtb = {aedTtb} \r\n                cnyTts = {cnyTts} \r\n                cnyTtb = {cnyTtb} \r\n                hkdTts = {hkdTts} \r\n                hkdTtb = {hkdTtb} \r\n                krwTts = {krwTts} \r\n                krwTtb = {krwTtb} \r\n                jpyTts = {jpyTts} \r\n                jpyTtb = {jpyTtb} \r\n                cadTts = {cadTts} \r\n                cadTtb = {cadTtb} \r\n                usdTts = {usdTts} \r\n                usdTtb = {usdTtb} \r\n                audTtb = {audTtb} \r\n                audTts = {audTts} \r\n             ></CustomGlobe>\r\n            <Graph></Graph>\r\n            <ChatBotManual></ChatBotManual>\r\n            <SideBar></SideBar>\r\n\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport Home from './pages/Home';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Home></Home>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}